/*El procés pare, demanarà per terminal el nom d'un fitxer que li enviarà al procés fill. Aquest li indicarà d'alguna manera si aquest nom és correcte (pot obrir el fitxer i llegir-lo) o en cas contrari li demanarà que li enviï un nou nom de fitxer. Aquesta comunicació es farà a través de canonades sense nom. El procés fill anirà llegint aquest fitxer per blocs, i li anirà enviant al procés pare per blocs, a través d'una canonada sense nom. El procés pare demanarà (o haurà demanat) un segon nom de fitxer que serà el que haurà de fer servir per copiar la informació que li arribi del procés fill. */

#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>
#include <fcntl.h>

void err_sys(const char* cadena){	

	perror(cadena);	

	exit(1);
} 

int main(int argc, char* argv[]){
  
	if (argc==3){

	    char arxiu1[100]= "prova.txt";
	    strcpy(arxiu1,argv[1]);
	    char arxiu2[100]= "sortida.txt";
	    strcpy(arxiu2,argv[2]);

	    int df, descriptors[] = {0,0};

	    pipe(descriptors);

	    int fill = fork();

	    if (fill > 0) { 
	      df = open(arxiu1, O_RDONLY);

	      if (df < 0) {
		printf("No es troba l'arxiu *%s*, el tornem a demanar(crear).\n",arxiu1);
		df = creat(arxiu1, 0777);

	      } else {

		printf("Arxiu *%s* obert per llegir.\n",arxiu1);
		char buffer[10];
		int i=0;

		while (i<10){
		   buffer[i]='\0';
		   i++;
		}

		int tamany = read(df,buffer,9);
		buffer[9]='\0';

		if (tamany == -1){
		  perror("Error de lectura.\n");

		} else if (tamany==0){
		  perror("Arxiu buit.\n");

		} else {
		  write(descriptors[1], buffer, strlen(buffer));
		  printf("%s'", buffer);
		  i = 0;

		  while (i < 10){
	 	    buffer[i]='\0'; 
		    i++; 
		  } 

		  while (read(df, buffer,100)>=0 && strlen(buffer)>0) {
		    write(descriptors[1], buffer, strlen(buffer));
		    printf("%s'",buffer);
		    i = 0;

		    while (i < 101){
		      buffer[i]='\0';
		      i++;
		    }
		  }
		}

		printf("\n\t-- Fi de la lectura --\n");
		close(df);
	      }

	    }else if (fill == 0){ 
	      df = creat(arxiu2,0777);

	      if (df < 0) { // error abriendo archivo
		perror("Error al crear\n");
		exit(0);

	      } else { // arxiu obert
		printf("Arxiu *%s* obert per escriure.\n",arxiu2);
		char buffer[10];
		int i = 0;

		while (i < 101){
		  buffer[i]='\0';
		  i++;
		}

		while(read(descriptors[0], buffer,100)>=0 && strlen(buffer)>0){
		  write(df, buffer, strlen(buffer));
		  i = 0;
		  
		  while(i < 101){
		      buffer[i]='\0';
		      i++;
		  }
		}

		printf("\n\t-- Fi de l'escriptura --\n");
		close(df);
	      }
	    } else {
	      printf("Error en el fork() _ 01\n");
	    }
	  } else {
	    perror("Quantitat d'arguments erronis.\n");
	  }
 exit(0);
}
